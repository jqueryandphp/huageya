import { load } from 'cheerio';
import { Handler, RenderOpts, FilterContext } from './index';
declare type FilterRootContainer = (ssrHtml: string, functor?: (html: string, context?: FilterContext) => string) => string;
/**
 * root html fragment string not parse by cheerio for better perfs
 * 1. <body>(.*)</body> => <body><!-- UMI_SERVER_TMP_PLACEHOLDER --></body>
 * 2. handlers => postProcessHtml html fragment
 * 3. <body><!-- UMI_SERVER_TMP_PLACEHOLDER -->...handler created</body>
 *    => <body>(.*)...handler created</body>
 *
 * @param html React server render origin html string
 * @param functor layout html functor for hanlders using cheerio
 */
export declare const filterRootContainer: FilterRootContainer;
export declare const _getDocumentHandler: typeof load;
export declare const injectChunkMaps: Handler;
export declare type INodePolyfillDecorator = (enable: boolean, url?: string) => (renderOpts?: RenderOpts, context?: {
    url: string;
}) => void;
export declare const nodePolyfillDecorator: INodePolyfillDecorator;
export {};
